rm(list = ls())
mu <- 0.07
n <- 1000
r <- 0.02
sigma <- 0.2
T <- 1
t <- 0
dt <- T/n
tau <- T - t
K <- 100
S0 <- 100

# BS-priser

d1 <- function(S,K,r,q,sigma,tau){
  (log(S/K)+(r-q)*tau + 1/2*sigma^2*tau)/(sigma*sqrt(tau))
} 
d2 <- function(S,K,r,q,sigma,tau){
  d1(S,K,r,q,sigma,tau) - sigma*sqrt(tau)
}

C <- function(S,K,r,sigma,q,tau,option="Call"){
  d1 <- d1(S,K,r,q,sigma,tau)
  d2 <- d2(S,K,r,q,sigma,tau)
  
  if (option=="Call"){
    result <- exp(-q*tau)*S*pnorm(d1) - K*exp(-r*tau)*pnorm(d2)
  }
  
  if (option=="Put"){
    result <-  exp(-q*tau)*S*pnorm(d1) - K*exp(-r*tau)*pnorm(d2) -exp(-q*tau)*S + K*exp(-r*tau)
  }
  result
}

C <- Vectorize(C)


BS.delta <- function(S, K, r, q,  sigma, tau, option = "Call"){
  if (option == "Call"){
    result <-  exp(-q*tau)*pnorm(d1(S,K,r,q,sigma,tau))
  }
}
BS.delta <- Vectorize(BS.delta)

BS.gamma <- function(S, K, r,  sigma, tau, option = "Call"){
  d1 <- d1(S, K, r, sigma, tau)
  if (option == "Call"){
    result <- (dnorm(d1, mean = 0, sd = 1)) / (S * sigma * sqrt(tau))
  }
  result
}
BS.gamma <- Vectorize(BS.gamma)

# Simulering af delta under S under P mÃ¥let. 

set.seed(100)
Z <- rnorm(n, mean=0, sd=1) 
X <- cumsum((mu-1/2*sigma^2)*dt + sigma*sqrt(dt)*Z)
S <- c(S0,S0*exp(X))

call_prices <- C(S=S, K=K, r=r, sigma=sigma,tau=tau, q = 0, option = "Call")

delta <- BS.delta(S=S, K=K, r=r, q = 0, sigma=sigma,tau=tau, option = "Call")

t <- seq(t, T, length = n+1)

df <- data.frame(time = t, spot = S, call = call_prices, delta = delta)

df_melt <- melt(df, id = "time", measure.vars = c("spot","call"))



ggplot(df_melt, aes(x = time, y = value, color = variable)) + 
  geom_line(size=1) +
  geom_hline(aes(yintercept=K)) +
  geom_hline(aes(yintercept=0)) +
  xlab("time") +
  ylab("Value") +
  theme(plot.title = element_text(hjust = 0.5)) +
  ggtitle("Spot Price vs. Call Price")+
  theme(plot.title = element_text(lineheight=0.8) # face="bold"
        ,axis.text.x = element_text(angle = 0, hjust = 1,vjust=1))

ggplot(data=df, aes(x=time, y=delta)) + 
  geom_line(size=1) +
  xlab("time") +
  ylab("Value") +
  ylim(c(0,1)) +
  theme(plot.title = element_text(hjust = 0.5)) +
  ggtitle("Delta")+
  theme(plot.title = element_text(lineheight=0.8) # face="bold"
        ,axis.text.x = element_text(angle = 0, hjust = 1,vjust=1))
